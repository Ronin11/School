package test;

import static org.junit.Assert.*;

import java.io.File;

import org.junit.Test;

import engineer.Engineer;
import io.XML;
import task.Task;

public class Tests {

	@Test
	public void testSave(){
		Engineer e = new Engineer();
		e.setName("steve");
		e.setHours(8);
		
		Task t = Task.Builder.buildParallelTask();
		t.addEngineerToTask(e);
		t.setDescription("description");
		t.setLabel("label");
		t.addSubtask(Task.Builder.buildLeafTask());
		t.getSubtasks().get(0).addSubtask(Task.Builder.buildLeafTask());
		XML.exportTasks(t, new File("test.xml"));
		assert(true);
	}
	
	@Test
	public void testLoad(){
		Task t = XML.importTasks(new File("test.xml"));
		assertTrue(t != null);
	}
	
	@Test
	public void testClasses(){
		Engineer e = new Engineer();
		e.setName("steve");
		e.setHours(8);
		Engineer e2 = new Engineer();
		e2.setName("steve");
		e2.setHours(8);
		
		assertTrue(e.getId() != e2.getId());
		
		Task t = Task.Builder.buildParallelTask();
		t.addEngineerToTask(e);
		assertTrue(t.getAssignedEngineers().contains(e));
		t.removeEngineerFromoTask(e);
		assertFalse(t.getAssignedEngineers().contains(e));
		
		t.setDescription("description");
		t.setLabel("label");
		t.addSubtask(Task.Builder.buildLeafTask());
		t.getSubtasks().get(0).addSubtask(Task.Builder.buildLeafTask());
		assertTrue(t.getSubtasks().size() == 1);
	}
}
