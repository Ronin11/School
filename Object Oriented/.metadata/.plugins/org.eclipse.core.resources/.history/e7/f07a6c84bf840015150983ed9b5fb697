package solver;

import java.util.ArrayList;

import sudoku.Board;
import sudoku.Cell;
import sudoku.Iterator;

public class CrooksSolver extends Solver {

	public CrooksSolver(Board b) {
		super(b);
	}

	@Override
	public Board solve() {
		setBoardPossibilities();
		Iterator iterator = board.getIterator();
		while(iterator.hasNext()){
			Cell cell = iterator.next();
			if(cell.getChar() == '-')
				setOnlyPossibilities(cell);
		}
		return null;
	}
	
	private void setBoardPossibilities(){
		Iterator iterator = board.getIterator();
		while(iterator.hasNext()){
			Cell cell = iterator.next();
			if(cell.getChar() == '-')
				this.setPossibilities(cell);
		}
	}
	
	private void setPossibilities(Cell cell){
		ArrayList<Character> temp = new ArrayList<Character>();
		for(Character c : board.getAvailableChars()){
			cell.setChar(c);
			if(this.isInsertionValid(cell))
				temp.add(c);
		}
		cell.clear();
		cell.getPossibilities().addAll(temp);
	}
	
	private void setOnlyPossibility(Cell cell){
		if(cell.getPossibilities().size() <= 1){
			cell.setChar(cell.getPossibilities().get(0));
			if(!this.isInsertionValid(cell))
				System.out.println("BAD");
		}
	}
	

}
