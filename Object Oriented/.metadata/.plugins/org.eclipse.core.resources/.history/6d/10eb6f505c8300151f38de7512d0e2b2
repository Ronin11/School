package sudoku;

import java.util.ArrayList;

public class Board implements SudokuContainer{
	ArrayList<ArrayList<Character>> board; 
	

	public Board(int i){
		board = new ArrayList<ArrayList<Character>>(i);
		board.get(0).add('1');
		board.get(0).add('2');
		board.get(0).add('3');
		board.get(0).add('4');
		board.get(1).add('1');
		board.get(1).add('2');
		board.get(1).add('3');
		board.get(1).add('4');
		board.get(2).add('1');
		board.get(2).add('2');
		board.get(2).add('3');
		board.get(2).add('4');
		board.get(3).add('1');
		board.get(3).add('2');
		board.get(3).add('3');
		board.get(3).add('4');
		
		Iterator iter = this.getIterator();
		while(iter.hasNext())
			System.out.println(iter.next());
	}
	
	@Override
	public Iterator getIterator() {
		return new SudokuIterator();
	}
	
	private class SudokuIterator implements Iterator{
		int xIndex, yIndex;
		SudokuIterator(){
			xIndex = 0;
			yIndex = 0;
		}
		@Override
		public boolean hasNext() {
			if(xIndex < board.size())
				if(yIndex < board.get(0).size())
					return true;
			return false;
		}

		@Override
		public Character next() {
			if(this.hasNext()){
				Character temp = board.get(xIndex).get(yIndex);
				if(xIndex + 1 < board.size())
					xIndex++;
				else{
					yIndex++;
					xIndex = 0;
				}
				return temp;
			}
			return null;
		}
	}
}
