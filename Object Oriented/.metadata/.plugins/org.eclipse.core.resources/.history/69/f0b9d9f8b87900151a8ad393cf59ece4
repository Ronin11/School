package command;

import java.util.ArrayList;
import java.util.concurrent.Semaphore;

public class Invoker {
	private ArrayList<Command> done = new ArrayList<Command>();
	private ArrayList<Command> toDo = new ArrayList<Command>();
	private Thread thread;
	private boolean run = true;
	private Semaphore mutex;
	
	public Invoker(){
		mutex = new Semaphore(1);
	}
	
	public void start(){
		thread = new Thread(process);
		thread.start();
	}
	public void undo(){
		
	}
	
	private void process(){
		while(run){
			if(toDo.size() > 0){
				try{
					mutex.acquire();
					try{
						
					} finally {
						mutex.release();
					}
				} catch(){
					
				}
			}
			else 
				Thread.sleep(50);
			
		}
	}

}
