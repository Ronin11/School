package sudoku;

import java.util.ArrayList;

public class Board implements SudokuContainer{
	ArrayList<ArrayList<Character>> board; 
	

	public Board(int size){
		board = new ArrayList<ArrayList<Character>>(size);
		for(int i = 0; i < size; i++)
			board.add(new ArrayList<Character>(size));
	}
	public void build(char[][] c){
		for
	}
	
	@Override
	public Iterator getIterator() {
		return new SudokuIterator();
	}
	
	private class SudokuIterator implements Iterator{
		int xIndex, yIndex;
		SudokuIterator(){
			xIndex = 0;
			yIndex = 0;
		}
		@Override
		public boolean hasNext() {
			if(xIndex < board.size())
				if(yIndex < board.get(0).size())
					return true;
			return false;
		}

		@Override
		public Character next() {
			if(this.hasNext()){
				Character temp = board.get(yIndex).get(xIndex);
				if(xIndex + 1 < board.size())
					xIndex++;
				else{
					yIndex++;
					xIndex = 0;
				}
				return temp;
			}
			return null;
		}
	}
}
